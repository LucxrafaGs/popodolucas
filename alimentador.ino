//codigo projeto alimentador by-Lucx00_00

//bibliotecas 
#include <Arduino.h>
#include <Wire.h>
#include <MicroLCD.h>
#include "PushButton.h"

#define pinBot1 2
#define pinBot2 3
#define pinBot3 4
#define pinBot4 5
#define botaao 9 

#include <VarSpeedServo.h>
VarSpeedServo servo1;



LCD_SSD1306 displayoLed; 

//logo pata de cachorro
const PROGMEM uint8_t logo[128 * 64 / 8] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFE, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF0, 0x00, 0x00, 0x00, 0xF0,
0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x1F, 0x7F, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x0F,
0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x01, 0x80,
0x80, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xE0,
0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0xC1, 0xF8, 0xFC, 0xFE, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x1F, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x0F, 0x07,
0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0x87, 0x0F, 0x1F, 0x3F, 0x3F,
0x3F, 0x3F, 0x1F, 0x1F, 0x0F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8,
0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8, 0xE0,
0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3F, 0x7F, 0x7F, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
0x1F, 0x1F, 0x1F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

PushButton botao1(pinBot1); //decrescentar valor
PushButton botao2(pinBot2); //seletor de menus
PushButton botao3(pinBot3); //acrescentar valor
PushButton botao4(pinBot4); //iniciar

int valorTempo1 = 30; //Variável para guardar o valor do timer
int valorTempo2 = 30; //Variável para guardar o valor de espera para ativar o timer
byte contadorFuncao = 0; // contador para saber qual valor estamos
bool executar = false; // Aciona execucao do funcao selecionada
unsigned long controleTempo = millis(); //Variável para controlar o tempo

void setup() {

  displayoLed.begin(); //Iniciando o objeto display

 servo1.attach(8);

pinMode(botaao,INPUT_PULLUP);

  displayoLed.clear(); // Limpando o display
  displayoLed.setCursor(0,0); // Posicionando cursor na coluna 0 linha 0
  displayoLed.draw(logo,128,64); // Desenhando no display parametros (imagem,largura,altura)

servo1.write(100,100); //servo da porta 
  
}

void loop() {


    
  botao1.lerBotao(); 
  botao2.lerBotao(); 
  botao3.lerBotao(); 
  
  if(botao2.pressed() && contadorFuncao < 4) contadorFuncao++; 
  if( contadorFuncao >= 4) contadorFuncao = 0; 

  
  switch(contadorFuncao){
    case 0: // modo neutro com logo pata
      displayoLed.setCursor(0,0);
      displayoLed.draw(logo,128,64);
      break;
    
    case 1: //Entra no menu para executar a contagem de tempo 
      valorTempo1 = 30; //Define um tempo padrão inicial
      funcaoMenu1(); //Chama funcaoMenu1
      if (executar) funcaoExec1(); //Executa a funcao do modo escolhido 
      break;
      
    case 2:
      valorTempo1 = 30; 
      funcaoMenu1(); 
      if (executar) funcaoExec2();  
      break;
      
    case 3:
      valorTempo1 = 30; //Define um tempo padrão inicial, caso a funcaoMenu1() 
      valorTempo2 = 10; //Define um tempo padrão inicial, caso a funcaoMenu2() 
      funcaoMenu2(); 
      if (executar) funcaoExec3(); //Executa a funcao do modo escolhido     
      displayoLed.clear(); //Limpa o Display   
      executar = false; 
      break;
  }

   static bool bt = 0; // aciona o motor se o menu logo estiver ligado
if(!digitalRead(botaao)){
  bt = 1;
  delay(100);
}

if (digitalRead(botaao) && bt){


servo1.write(130,100);
delay(1000);
servo1.write(100,100);
delay(1000);


  bt=0;
}

}

//Funcao de execução do menu de seleção de tempo tipo 1
void funcaoMenu1(){
  int valorTimer = funcaoTimer(); 
  int valorAnterior;   
  executar = false; 
  
  
  displayoLed.clear();
  displayoLed.setFontSize(FONT_SIZE_LARGE);
  displayoLed.print("Timer: ");
  displayoLed.printLong(valorTimer); 
  displayoLed.setCursor(0,4);
  displayoLed.print("Menu: ");
  displayoLed.printLong(contadorFuncao);

  
  while( executar == false ){ /* Para sair do While precisa acionar o botao 4 para executar = true */

        
    if(valorAnterior != valorTimer){
      displayoLed.clear();
      displayoLed.setFontSize(FONT_SIZE_LARGE); 
      displayoLed.print("Timer: ");
      displayoLed.printLong(valorTimer); 
      displayoLed.setCursor(0,4);
      displayoLed.print("Menu: ");
      displayoLed.printLong(contadorFuncao);
    }

    valorAnterior = valorTimer;
    valorTimer = funcaoTimer();
    
    botao2.lerBotao();
    if (botao2.pressed()) {
      contadorFuncao++; 
      break; 
    }
    
    botao4.lerBotao(); 
    if (botao4.pressed()) executar = true; 
    
  }
    
}

//Funcao de execução do menu de seleção de tempo tipo 2
void funcaoMenu2(){
  while((contadorFuncao == 3) && !executar){
    funcaoMenu1();
    int valorTimer = funcaoTimer2();
    int valorAnterior;
    executar = false;

      while( executar == false ){ 
          
      if(valorAnterior != valorTimer){
        displayoLed.clear();
        displayoLed.setFontSize(FONT_SIZE_LARGE); 
        displayoLed.print("Timer2: ");
        displayoLed.printLong(valorTimer); 
        displayoLed.setCursor(0,4);
        displayoLed.print("Menu: ");
        displayoLed.printLong(contadorFuncao); 
      }
  
      valorAnterior = valorTimer; 
      valorTimer = funcaoTimer2();
      
      botao2.lerBotao();
      if (botao2.pressed()) {
        contadorFuncao++; // muda o contador da função para ir para o próximo menu
        break; // Sai do While caso aperto o botao 2.
      }
      
      botao4.lerBotao();    
      if (botao4.pressed()) executar = true; 
      
    }    
    
  }
        
}

//contagem progressiva
void funcaoExec1(){
  displayoLed.clear();
  displayoLed.setCursor(0,0);
  displayoLed.draw(logo,128,64);
  controleTempo = millis();
  int valorDisplay = 0;  
  delay(500);

  displayoLed.clear();
  displayoLed.setFontSize(FONT_SIZE_LARGE);
  displayoLed.print("de:");
  displayoLed.printLong(valorDisplay);
  displayoLed.setCursor(0, 4);
  displayoLed.print("ate: ");
  displayoLed.printLong(valorTempo1);


   
  while( ( executar == true ) && ( ( valorTempo1 - valorDisplay ) > 0) ){
    int valorAnterior = valorDisplay;
             
    if( ( millis() - controleTempo ) > 1000){
      controleTempo = millis();
      valorDisplay++;
    }
    
    if (valorAnterior != valorDisplay){
      displayoLed.clear();
      displayoLed.setFontSize(FONT_SIZE_LARGE);
      displayoLed.print("de:");
      displayoLed.printLong(valorDisplay);
      displayoLed.setCursor(0, 4);
      displayoLed.print("ate: ");
      displayoLed.printLong(valorTempo1);
    }
       
    
    botao1.lerBotao();
    botao2.lerBotao();
    botao3.lerBotao();   
    botao4.lerBotao();
    
    if (botao1.pressed() && (valorTempo1>30) ) valorTempo1 -= 30; 
    else if (botao3.pressed() && (valorTempo1<300)) valorTempo1 += 30;
    else if (botao4.pressed()) executar = false;
    else if (botao2.pressed()){
      executar = false;
      contadorFuncao++;
      break;      
    }
        
  }
 servo1.write(130,100);
 delay (1000);
  servo1.write(100,100);
 
}

//contagem regressiva 
void funcaoExec2(){
  displayoLed.clear();
  displayoLed.setCursor(0,0);
  displayoLed.draw(logo,128,64);
  controleTempo = millis();   
  delay(500);

  displayoLed.clear();
  displayoLed.setFontSize(FONT_SIZE_LARGE);
  displayoLed.print("de: ");
  displayoLed.printLong(valorTempo1);
  displayoLed.setCursor(0, 4);
  displayoLed.print("ate: ");
  displayoLed.printLong(0);
  
  while( ( executar == true ) && ( valorTempo1 > 0 ) ){
    int valorAnterior = valorTempo1;
    
    if((millis() - controleTempo) > 1000){
      controleTempo = millis();
      valorTempo1--;
    }
    
    if (valorAnterior != valorTempo1){
      displayoLed.clear();
      displayoLed.setFontSize(FONT_SIZE_LARGE);
      displayoLed.print("de: ");
      displayoLed.printLong(valorTempo1);
      displayoLed.setCursor(0, 4);
      displayoLed.print("ate: ");
      displayoLed.printLong(0);  
    }
   
    
    botao1.lerBotao();
    botao2.lerBotao();
    botao3.lerBotao();   
    botao4.lerBotao();
    if (botao1.pressed() && (valorTempo1 > 30) ) valorTempo1 -= 30; 
    else if (botao3.pressed() && (valorTempo1 < 300)) valorTempo1 += 30;
    else if (botao4.pressed()) executar = false;
    else if (botao2.pressed()){
      executar = false;
      contadorFuncao++;
      break;
    }
    
  }

   servo1.write(130,100);
 delay (1000);
  servo1.write(100,100);
 
 
  
}

//contagem regressiva sem acionamento
void funcaoNExec(){
  displayoLed.clear();
  displayoLed.setCursor(0,0);
  displayoLed.draw(logo,128,64);
  controleTempo = millis();  
  delay(500);

  displayoLed.clear();
  displayoLed.setFontSize(FONT_SIZE_LARGE);
  displayoLed.print("de: ");
  displayoLed.printLong(valorTempo2);
  displayoLed.setCursor(0, 4);
  displayoLed.print("ate: ");
  displayoLed.printLong(0);
  
  while( ( executar == true ) && ( valorTempo2 > 0 ) ){
    int valorAnterior = valorTempo2;
    
    if((millis() - controleTempo) > 1000){
      controleTempo = millis();
      valorTempo2--;
    }
    
    if (valorAnterior != valorTempo2){
      displayoLed.clear();
      displayoLed.setFontSize(FONT_SIZE_LARGE);
      displayoLed.print("de: ");
      displayoLed.printLong(valorTempo2);
      displayoLed.setCursor(0, 4);
      displayoLed.print("ate: ");
      displayoLed.printLong(0);  
    }
    
    botao1.lerBotao();
    botao2.lerBotao();
    botao3.lerBotao();   
    botao4.lerBotao();
    if (botao1.pressed() && (valorTempo2 > 30) ) valorTempo2 -= 30; 
    else if (botao3.pressed() && (valorTempo2 < 300)) valorTempo2 += 30;
    else if (botao4.pressed()) executar = false;
    else if (botao2.pressed()){
      executar = false;
      contadorFuncao++;
      break;
    }
    
  }
    
}

//Funcao Mista, executa contagem regressiva sem acionamento e contagem progressiva com acionamento
void funcaoExec3(){
  funcaoNExec();
  funcaoExec1(); 
  
}

//Função para incremento do tempo de 30 em 30
int funcaoTimer(){
    botao1.lerBotao();
    botao3.lerBotao(); 
  if(botao1.pressed() && botao3.pressed()) return valorTempo1;
    else if(valorTempo1 < 300 && botao3.pressed()) valorTempo1 += 30;
    else if(valorTempo1 > 30 && botao1.pressed()) valorTempo1 -= 30;
  return valorTempo1;
}


int funcaoTimer2(){  
    botao1.lerBotao();
    botao3.lerBotao();
  if(botao1.pressed() && botao3.pressed()) return valorTempo2;
    else if(valorTempo2 < 300 && botao3.pressed()) valorTempo2 += 30;
    else if(valorTempo2 > 30 && botao1.pressed()) valorTempo2 -= 30;
  return valorTempo2;
}
